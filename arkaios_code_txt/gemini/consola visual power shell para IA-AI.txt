Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Crear formulario principal
$form = New-Object System.Windows.Forms.Form
$form.Text = "Consola Visual de PowerShell - Conexión GitHub"
$form.Size = New-Object System.Drawing.Size(800, 600)
$form.StartPosition = "CenterScreen"
$form.BackColor = [System.Drawing.Color]::FromArgb(45, 45, 48)
$form.ForeColor = [System.Drawing.Color]::White

# Crear caja de texto para salida
$outputBox = New-Object System.Windows.Forms.RichTextBox
$outputBox.Location = New-Object System.Drawing.Point(10, 40)
$outputBox.Size = New-Object System.Drawing.Size(760, 400)
$outputBox.BackColor = [System.Drawing.Color]::FromArgb(30, 30, 30)
$outputBox.ForeColor = [System.Drawing.Color]::FromArgb(241, 241, 241)
$outputBox.Font = New-Object System.Drawing.Font("Consolas", 10)
$outputBox.ReadOnly = $true
$outputBox.ScrollBars = "Vertical"

# Panel para entrada de GitHub
$githubPanel = New-Object System.Windows.Forms.Panel
$githubPanel.Location = New-Object System.Drawing.Point(10, 450)
$githubPanel.Size = New-Object System.Drawing.Size(760, 110)
$githubPanel.BackColor = [System.Drawing.Color]::FromArgb(37, 37, 38)
$githubPanel.BorderStyle = "FixedSingle"

# Etiqueta de GitHub
$githubLabel = New-Object System.Windows.Forms.Label
$githubLabel.Location = New-Object System.Drawing.Point(10, 10)
$githubLabel.Size = New-Object System.Drawing.Size(400, 20)
$githubLabel.Text = "Configuración de GitHub Repository:"
$githubLabel.Font = New-Object System.Drawing.Font("Segoe UI", 10, [System.Drawing.FontStyle]::Bold)
$githubLabel.ForeColor = [System.Drawing.Color]::FromArgb(0, 122, 204)

# Campo para usuario/repositorio
$repoInput = New-Object System.Windows.Forms.TextBox
$repoInput.Location = New-Object System.Drawing.Point(10, 40)
$repoInput.Size = New-Object System.Drawing.Size(500, 30)
$repoInput.BackColor = [System.Drawing.Color]::FromArgb(30, 30, 30)
$repoInput.ForeColor = [System.Drawing.Color]::White
$repoInput.Font = New-Object System.Drawing.Font("Consolas", 10)
$repoInput.Text = "usuario/repositorio"

# Botón para configurar GitHub
$setupButton = New-Object System.Windows.Forms.Button
$setupButton.Location = New-Object System.Drawing.Point(520, 40)
$setupButton.Size = New-Object System.Drawing.Size(120, 23)
$setupButton.Text = "Configurar"
$setupButton.BackColor = [System.Drawing.Color]::FromArgb(0, 122, 204)
$setupButton.ForeColor = [System.Drawing.Color]::White
$setupButton.FlatStyle = "Flat"

# Botón para autorizar
$authButton = New-Object System.Windows.Forms.Button
$authButton.Location = New-Object System.Drawing.Point(10, 70)
$authButton.Size = New-Object System.Drawing.Size(200, 23)
$authButton.Text = "Abrir Autorización GitHub"
$authButton.BackColor = New-Object System.Drawing.Color(46, 164, 79)
$authButton.ForeColor = [System.Drawing.Color]::White
$authButton.FlatStyle = "Flat"

# Etiqueta de título
$titleLabel = New-Object System.Windows.Forms.Label
$titleLabel.Location = New-Object System.Drawing.Point(10, 10)
$titleLabel.Size = New-Object System.Drawing.Size(300, 20)
$titleLabel.Text = "Conexión GitHub - Firebase CLI"
$titleLabel.Font = New-Object System.Drawing.Font("Segoe UI", 12, [System.Drawing.FontStyle]::Bold)
$titleLabel.ForeColor = [System.Drawing.Color]::FromArgb(0, 122, 204)

# Función para agregar texto a la salida
function Add-Output {
    param([string]$text, [string]$color = "White")
    
    $outputBox.SelectionStart = $outputBox.TextLength
    $outputBox.SelectionLength = 0
    
    switch ($color) {
        "Green" { $outputBox.SelectionColor = [System.Drawing.Color]::FromArgb(75, 218, 109) }
        "Red" { $outputBox.SelectionColor = [System.Drawing.Color]::FromArgb(241, 76, 76) }
        "Yellow" { $outputBox.SelectionColor = [System.Drawing.Color]::FromArgb(254, 202, 87) }
        "Blue" { $outputBox.SelectionColor = [System.Drawing.Color]::FromArgb(0, 122, 204) }
        "Orange" { $outputBox.SelectionColor = [System.Drawing.Color]::FromArgb(247, 147, 30) }
        default { $outputBox.SelectionColor = [System.Drawing.Color]::White }
    }
    
    $outputBox.AppendText("$text`r`n")
    $outputBox.ScrollToCaret()
}

# Función para validar formato de repositorio
function Test-RepositoryFormat {
    param([string]$repo)
    
    if ($repo -match "^[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+$") {
        return $true
    } else {
        return $false
    }
}

# Evento para el botón de configuración
$setupButton.Add_Click({
    $repo = $repoInput.Text.Trim()
    
    if (Test-RepositoryFormat $repo) {
        Add-Output "Configurando repositorio: $repo" "Green"
        Add-Output "Ejecutando: firebase init hosting:github" "Blue"
        Add-Output "Cuando te pregunte, responde con: $repo" "Yellow"
        
        # Simular el comando de Firebase (en producción, ejecutarías el comando real)
        Add-Output "✔ Formato de repositorio válido" "Green"
        Add-Output "ℹ Responde a Firebase con: $repo" "Yellow"
    } else {
        Add-Output "✘ Formato incorrecto. Debe ser: usuario/repositorio" "Red"
        Add-Output "ℹ Ejemplo correcto: dikim2025/mi-repositorio" "Yellow"
        Add-Output "ℹ NO uses la URL completa, solo usuario/repositorio" "Orange"
    }
})

# Evento para el botón de autorización
$authButton.Add_Click({
    Add-Output "Abriendo página de autorización de GitHub..." "Blue"
    Start-Process "https://github.com/settings/connections/applications/89cf50f02ac6aaed3484"
    Add-Output "1. Visita la página abierta en tu navegador" "Yellow"
    Add-Output "2. Autoriza la aplicación Firebase CLI" "Yellow"
    Add-Output "3. Regresa a esta ventana" "Yellow"
    Add-Output "4. Ingresa tu repositorio en formato usuario/repositorio" "Yellow"
    Add-Output "5. Haz clic en 'Configurar'" "Yellow"
})

# Agregar controles al formulario
$form.Controls.Add($outputBox)
$form.Controls.Add($titleLabel)
$githubPanel.Controls.Add($githubLabel)
$githubPanel.Controls.Add($repoInput)
$githubPanel.Controls.Add($setupButton)
$githubPanel.Controls.Add($authButton)
$form.Controls.Add($githubPanel)

# Mensaje inicial
Add-Output "Configuración de GitHub para Firebase CLI" "Yellow"
Add-Output "==========================================" "White"
Add-Output "Pasos a seguir:" "Blue"
Add-Output "1. Haz clic en 'Abrir Autorización GitHub'" "White"
Add-Output "2. Autoriza la aplicación Firebase CLI" "White"
Add-Output "3. Ingresa tu repositorio en formato USUARIO/REPOSITORIO" "White"
Add-Output "4. Haz clic en 'Configurar'" "White"
Add-Output "" "White"
Add-Output "Formato correcto: dikim2025/mi-repositorio" "Green"
Add-Output "Formato incorrecto: https://github.com/dikim2025/mi-repositorio" "Red"
Add-Output "" "White"
Add-Output "Si ya autorizaste la aplicación, ingresa directamente tu repositorio." "Yellow"

# Mostrar formulario
$form.ShowDialog() | Out-Null