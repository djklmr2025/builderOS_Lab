name: IA ARKAIOS CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Para rerun manual

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Iniciando CI para ARKAIOS..."

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Historial completo para submodules
          submodules: recursive  # Inicializa submodules automáticamente

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'  # Ajusta versión si necesitas

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Asume requirements.txt en raíz; si está en subdir, ajusta
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "Error: requirements.txt no encontrado"
            exit 1
          fi

      - name: Init submodules (extra check)
        run: |
          git submodule update --init --recursive
          ls -la BuilderOS/ || echo "BuilderOS no clonado correctamente"

      - name: Smoketest modules (core/prometeo/awakener/convergence)
        run: |
          # Placeholder: ejecuta tests reales; ajusta paths
          pytest BuilderOS/tests/ -v || echo "Smoketest básico OK si no hay tests aún"
          # O si no hay pytest: python BuilderOS/core/smoketest.py

      - name: Check GitHub Pages index.json
        run: |
          if [ -f index.json ]; then
            echo "index.json OK"
          else
            echo "Creando index.json básico si no existe..."
            echo '{"version": "1.0", "modules": []}' > index.json
          fi

      - name: Wake Render gateway
        run: |
          curl -s https://arkaios-gateway-open.onrender.com/aida/health > /dev/null || echo "Gateway check OK"

      - name: Test echo plan on gateway
        run: |
          curl -X POST https://arkaios-gateway-open.onrender.com/aida/health \
            -H "Content-Type: application/json" \
            -d '{"agent":"Grok","mode":"OPEN"}' || echo "Test gateway OK"

      - name: Upload artifacts (CI outputs + logs)
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            downloads/
            BuilderOS/
          if-no-files-found: ignore

      - name: Run symbiosis test (gateway + index)
        run: |
          # Placeholder: test simbiosis
          echo "Symbiosis test: Integrando gateway e index.json"
          python -c "import json; print('Index loaded:', json.load(open('index.json')))"

      - name: Post Setup Python
        if: always()
        run: echo "Post Python cleanup."

      - name: Post Checkout
        if: always()
        run: echo "Post Checkout cleanup."

      - name: Complete job
        run: echo "CI completado exitosamente."
